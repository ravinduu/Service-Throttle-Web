[{"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\index.js":"1","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\App.js":"2","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\reportWebVitals.js":"3","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\login\\Login.js":"4","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\login\\userLogin.js":"5","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\dataLayer\\DataLayer.js":"6","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\dataLayer\\reducer.js":"7","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\navbar\\NavBar.jsx":"8","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\Sidebar.jsx":"9","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\sidebarOption\\SidebarOption.jsx":"10","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\styles.js":"11","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\layout\\Layout.jsx":"12","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\dashboard\\Dashboard.jsx":"13","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\footer\\Footer.jsx":"14","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\title\\Title.jsx":"15","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\wrappers\\Wrappers.jsx":"16","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\title\\styles.js":"17","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\popup\\Popup.jsx":"18","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\admin\\Admins.jsx":"19","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\customer\\Customers.jsx":"20","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\mobilemechanic\\Mobilemechanics.jsx":"21","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\supervisor\\Supervisors.jsx":"22","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\UserListTable.jsx":"23","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\table\\DisplayList.jsx":"24","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\userService.js":"25","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\customerVehicles\\CustomerVehicle.jsx":"26","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\vehicleService.js":"27","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleListTable.jsx":"28","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\mobileServiceVehicles\\MobileServiceVehicle.jsx":"29","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Model.jsx":"30","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Engine.jsx":"31","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Make.jsx":"32","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditUser.jsx":"33","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\deleteItem\\Delete.jsx":"34","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\AddUser.jsx":"35","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\header\\Header.jsx":"36","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehiclePartsList.jsx":"37","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditVehicleParts.jsx":"38","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditVehicle.jsx":"39","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\promotions\\Promotion.jsx":"40","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\promotionService.js":"41","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditAddPromotion.jsx":"42","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\srservices\\SrService.jsx":"43","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\srserviceservice.js":"44","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditAddSrService.jsx":"45"},{"size":775,"mtime":1614005187985,"results":"46","hashOfConfig":"47"},{"size":669,"mtime":1614005187970,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":3892,"mtime":1614005187985,"results":"50","hashOfConfig":"47"},{"size":1400,"mtime":1610440347876,"results":"51","hashOfConfig":"47"},{"size":416,"mtime":1614005187985,"results":"52","hashOfConfig":"47"},{"size":696,"mtime":1614005187985,"results":"53","hashOfConfig":"47"},{"size":420,"mtime":1614005187985,"results":"54","hashOfConfig":"47"},{"size":4798,"mtime":1614005187985,"results":"55","hashOfConfig":"47"},{"size":2053,"mtime":1614005187985,"results":"56","hashOfConfig":"47"},{"size":1019,"mtime":1614005187985,"results":"57","hashOfConfig":"47"},{"size":3537,"mtime":1614005187985,"results":"58","hashOfConfig":"47"},{"size":212,"mtime":1614005187970,"results":"59","hashOfConfig":"47"},{"size":284,"mtime":1614005187970,"results":"60","hashOfConfig":"47"},{"size":446,"mtime":1614005187985,"results":"61","hashOfConfig":"47"},{"size":3980,"mtime":1614005187985,"results":"62","hashOfConfig":"47"},{"size":331,"mtime":1614005187985,"results":"63","hashOfConfig":"47"},{"size":1216,"mtime":1614005187985,"results":"64","hashOfConfig":"47"},{"size":292,"mtime":1614005188001,"results":"65","hashOfConfig":"47"},{"size":301,"mtime":1614005188001,"results":"66","hashOfConfig":"47"},{"size":283,"mtime":1614005188001,"results":"67","hashOfConfig":"47"},{"size":270,"mtime":1614005188001,"results":"68","hashOfConfig":"47"},{"size":5931,"mtime":1614005187985,"results":"69","hashOfConfig":"47"},{"size":6456,"mtime":1614005187985,"results":"70","hashOfConfig":"47"},{"size":1271,"mtime":1614005188001,"results":"71","hashOfConfig":"47"},{"size":683,"mtime":1614005188001,"results":"72","hashOfConfig":"47"},{"size":1537,"mtime":1614005188001,"results":"73","hashOfConfig":"47"},{"size":5926,"mtime":1614005188001,"results":"74","hashOfConfig":"47"},{"size":930,"mtime":1614005188001,"results":"75","hashOfConfig":"47"},{"size":473,"mtime":1614005188001,"results":"76","hashOfConfig":"47"},{"size":447,"mtime":1614005188001,"results":"77","hashOfConfig":"47"},{"size":437,"mtime":1614005188001,"results":"78","hashOfConfig":"47"},{"size":5360,"mtime":1614005187970,"results":"79","hashOfConfig":"47"},{"size":1014,"mtime":1614005187970,"results":"80","hashOfConfig":"47"},{"size":4547,"mtime":1614005187970,"results":"81","hashOfConfig":"47"},{"size":2978,"mtime":1614005187985,"results":"82","hashOfConfig":"47"},{"size":8522,"mtime":1614005188001,"results":"83","hashOfConfig":"47"},{"size":5712,"mtime":1614005187970,"results":"84","hashOfConfig":"47"},{"size":3455,"mtime":1613491488546,"results":"85","hashOfConfig":"47"},{"size":6718,"mtime":1614005187985,"results":"86","hashOfConfig":"47"},{"size":1066,"mtime":1614005188001,"results":"87","hashOfConfig":"47"},{"size":3929,"mtime":1614005187970,"results":"88","hashOfConfig":"47"},{"size":6766,"mtime":1614005187985,"results":"89","hashOfConfig":"47"},{"size":1120,"mtime":1614005188001,"results":"90","hashOfConfig":"47"},{"size":5106,"mtime":1614005187970,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1kr3al5",{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"94"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"94"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"94"},"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\index.js",[],["211","212"],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\App.js",["213","214"],"import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Login from \"./components/login/Login\";\r\nimport Layout from \"./components/layout/Layout\";\r\nimport { useDataLayerValue } from \"./dataLayer/DataLayer\";\r\n\r\nfunction App() {\r\n  const [{ token }, dispatch] = useDataLayerValue();\r\n  const authToken = localStorage.getItem(\"AUTH_TOKEN\");\r\n\r\n  const [notLogged, setIsLogged] = useState(!authToken);\r\n\r\n  useEffect(() => {\r\n    if (!notLogged) {\r\n      dispatch({\r\n        type: \"SET_TOKEN\",\r\n        token: authToken,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return <div className=\"App\">{token ? <Layout /> : <Login />}</div>;\r\n}\r\n\r\nexport default App;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\reportWebVitals.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\login\\Login.js",["215","216","217"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport { Button, TextField, Typography, Container } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../layout/Layout\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string(\"Enter your username\")\r\n    .min(5, \"Username should be of minimum 5 characters length\")\r\n    .required(\"Username is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(5, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Login() {\r\n  const [warning, setWarning] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      userLogin(values);\r\n    },\r\n  });\r\n\r\n  const [{ api }, dispatch] = useDataLayerValue();\r\n\r\n  const userLogin = async (credentials) => {\r\n    setWarning(false);\r\n    try {\r\n      await axios\r\n        .post(`${api}/login`, credentials)\r\n        .then((res) => {\r\n          const _token = res.data.jwttoken;\r\n          const _username = res.data.username;\r\n          localStorage.setItem(\"AUTH_TOKEN\", _token);\r\n          localStorage.setItem(\"USERNAME\", _username);\r\n          dispatch({\r\n            type: \"SET_TOKEN\",\r\n            token: _token,\r\n          });\r\n        })\r\n        .then(() => {});\r\n    } catch (err) {\r\n      setWarning(true);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <div className=\"base-container\">\r\n        <Typography className=\"title\" variant=\"h4\" gutterBottom>\r\n          Service Throttle\r\n        </Typography>\r\n\r\n        {warning ? (\r\n          <Typography\r\n            variant=\"caption\"\r\n            display=\"block\"\r\n            color=\"error\"\r\n            gutterBottom\r\n          >\r\n            Invalid Username or Password\r\n          </Typography>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className=\"input\">\r\n            <div className=\"input-username\">\r\n              <TextField\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.username && Boolean(formik.errors.username)\r\n                }\r\n                helperText={formik.touched.username && formik.errors.username}\r\n              />\r\n            </div>\r\n            <div className=\"input-password\">\r\n              <TextField\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"btn-login\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              style={{\r\n                backgroundColor: \"#1167b1\",\r\n              }}\r\n            >\r\n              LOGIN\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\login\\userLogin.js",["218","219"],"import axios from \"axios\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\n\r\nconst api = \"http://localhost:8081/st\";\r\nconst state = {\r\n  username: \"\",\r\n  password: \"\",\r\n  token: \"\",\r\n};\r\n\r\nexport const UserLogin = async (username, password) => {\r\n  state.username = username;\r\n  state.password = password;\r\n  return (dispatch) => {\r\n    const res = axios.post(`${api}/login`, state);\r\n    state.token = res.data.jwttoken;\r\n\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      token: state.token,\r\n    });\r\n  };\r\n\r\n  // state.username = username;\r\n  // state.password = password;\r\n  // console.log(\"before : \" + state.token);\r\n  // try {\r\n  //   const res = await axios.post(`${api}/login`, state);\r\n  //   state.token = res.data.jwttoken;\r\n  //   console.log(\"after : \" + state.token);\r\n  //   SetToken(state.token);\r\n  //   return state.token;\r\n  // } catch (err) {}\r\n};\r\n\r\nexport const getToken = () => {\r\n  return state.token;\r\n};\r\n\r\n// function SetToken(params) {\r\n//   console.log(\"here \" + params);\r\n//   const [{ token }, dispatch] = useDataLayerValue();\r\n//   const _token = params;\r\n//   if (_token) {\r\n//     dispatch({\r\n//       type: \"SET_TOKEN\",\r\n//       token: _token,\r\n//     });\r\n//   }\r\n//   console.log(token);\r\n// }\r\n\r\nexport default getToken;\r\n\r\nlet authAxios = axios.create({\r\n  baseURL: api,\r\n  headers: {\r\n    Authorization: `Bearer ${state.token}`,\r\n  },\r\n});\r\n",["220","221"],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\dataLayer\\DataLayer.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\dataLayer\\reducer.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\navbar\\NavBar.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\Sidebar.jsx",["222","223","224","225","226","227","228"],"import React, { useState, useEffect } from \"react\";\r\nimport SidebarOption from \"./sidebarOption/SidebarOption\";\r\nimport \"./Sidebar.css\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { Drawer, Icon, IconButton, List } from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport DriveEtaIcon from \"@material-ui/icons/DriveEta\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AirportShuttleIcon from \"@material-ui/icons/AirportShuttle\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\nimport StarHalfIcon from \"@material-ui/icons/StarHalf\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SettingsApplicationsOutlinedIcon from \"@material-ui/icons/SettingsApplicationsOutlined\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nconst structure = [\r\n  { id: 0, option: \"Dashboard\", icon: DashboardIcon, link: \"/\" },\r\n  { id: 1, option: \"Service Requests\", icon: AddBoxIcon, link: \"/st/navbar\" },\r\n  {\r\n    id: 2,\r\n    option: \"Users\",\r\n    icon: PeopleAltIcon,\r\n    children: [\r\n      { option: \"Customers\", icon: PersonIcon, link: \"/st/users/customers\" },\r\n      { option: \"Admins\", icon: PeopleAltIcon, link: \"/st/users/admins\" },\r\n      {\r\n        option: \"Supervisors\",\r\n        icon: SupervisorAccountIcon,\r\n        link: \"/st/users/supervisors\",\r\n      },\r\n      {\r\n        option: \"Mobile Mechanics\",\r\n        icon: PeopleAltIcon,\r\n        link: \"/st/users/mobile-mechanics\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    option: \"Vehicles\",\r\n    icon: DriveEtaIcon,\r\n    children: [\r\n      {\r\n        option: \"Customer Vehicles\",\r\n        icon: DriveEtaIcon,\r\n        link: \"/st/vehicles/customer-vehicle\",\r\n      },\r\n      {\r\n        option: \"Service Vehicles\",\r\n        icon: AirportShuttleIcon,\r\n        link: \"/st/vehicles/mobile-service-vehicle\",\r\n      },\r\n      {\r\n        option: \"Vehicle Makes\",\r\n        icon: StarHalfIcon,\r\n        link: \"/st/vehicles/make\",\r\n      },\r\n      {\r\n        option: \"Vehicle Models\",\r\n        icon: StarHalfIcon,\r\n        link: \"/st/vehicles/model\",\r\n      },\r\n      {\r\n        option: \"Vehicle Engines\",\r\n        icon: StarHalfIcon,\r\n        link: \"/st/vehicles/engine\",\r\n      },\r\n    ],\r\n  },\r\n  { id: 4, option: \"Promotions\", icon: LocalAtmIcon, link: \"/st/promotions\" },\r\n  {\r\n    id: 5,\r\n    option: \"SR Services\",\r\n    icon: SettingsApplicationsOutlinedIcon,\r\n    link: \"/st/vehicle/services\",\r\n  },\r\n\r\n  { id: 6, option: \"Managing Documents\", icon: DescriptionIcon },\r\n  // { id: 5, option: \"Managing Documents\", icon: DescriptionIcon },\r\n\r\n  // { id: 5, option: \"Managing Documents\", icon: DescriptionIcon },\r\n\r\n  // { id: 5, option: \"Managing Documents\", icon: DescriptionIcon },\r\n];\r\n\r\nfunction Sidebar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  var [isSidebarOpened, setSidebarOpened] = useState(true);\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  function toggleSidebar() {\r\n    if (isSidebarOpened) setSidebarOpened(false);\r\n    else setSidebarOpened(true);\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className=\"sidebar\">\r\n        <IconButton onClick={() => toggleSidebar()}>\r\n          {isSidebarOpened ? (\r\n            <ArrowBack className=\"iconButton\" />\r\n          ) : (\r\n            <MenuIcon className=\"iconButton\" />\r\n          )}\r\n        </IconButton>\r\n        <List>\r\n          {structure.map((sidebarOption) => (\r\n            <SidebarOption\r\n              key={sidebarOption.icon}\r\n              option={sidebarOption.option}\r\n              Icon={sidebarOption.icon}\r\n              children={sidebarOption.children}\r\n              isSidebarOpened={isSidebarOpened}\r\n              link={sidebarOption.link}\r\n              {...sidebarOption}\r\n            />\r\n          ))}\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\sidebarOption\\SidebarOption.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\sidebar\\styles.js",["229","230"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n}));\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\layout\\Layout.jsx",["231","232"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Layout.css\";\r\nimport * as vehicleService from \"../../services/vehicleService\";\r\n\r\nimport Header from \"../header/Header\";\r\nimport NavBar from \"../navbar/NavBar\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Admins from \"../../pages/users/admin/Admins\";\r\nimport Customers from \"../../pages/users/customer/Customers\";\r\nimport Mobilemechanics from \"../../pages/users/mobilemechanic/Mobilemechanics\";\r\nimport Supervisors from \"../../pages/users/supervisor/Supervisors\";\r\nimport CustomerVehicle from \"../../pages/vehicles/customerVehicles/CustomerVehicle\";\r\nimport MobileServiceVehicle from \"../../pages/vehicles/mobileServiceVehicles/MobileServiceVehicle\";\r\nimport Make from \"../../pages/vehicles/VehicleData/Make\";\r\nimport Model from \"../../pages/vehicles/VehicleData/Model\";\r\nimport Engine from \"../../pages/vehicles/VehicleData/Engine\";\r\nimport Promotion from \"../../pages/promotions/Promotion\";\r\nimport SrService from \"../../pages/srservices/SrService\";\r\n\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\n\r\nfunction Layout() {\r\n  const [{ api }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    const _token = localStorage.getItem(\"AUTH_TOKEN\");\r\n    const _username = localStorage.getItem(\"USERNAME\");\r\n\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      token: _token,\r\n    });\r\n\r\n    let authAxios = axios.create({\r\n      baseURL: api,\r\n      headers: {\r\n        Authorization: `Bearer ${_token}`,\r\n        \"Content-Type\": \"text/plain\",\r\n      },\r\n    });\r\n\r\n    authAxios.get(`/account/${_username}`).then((res) => {\r\n      dispatch({\r\n        type: \"SET_USER\",\r\n        user: res.data,\r\n      });\r\n    });\r\n\r\n    vehicleService.getVehicleParts(authAxios, \"make\").then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: \"SET_MAKE\",\r\n        make: res,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"dashbord_body\">\r\n        <Sidebar />\r\n        <div className=\"body-component\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/st/users/admins\" exact component={Admins} />\r\n            <Route path=\"/st/users/customers\" exact component={Customers} />\r\n            <Route path=\"/st/users/supervisors\" exact component={Supervisors} />\r\n            <Route\r\n              path=\"/st/users/mobile-mechanics\"\r\n              exact\r\n              component={Mobilemechanics}\r\n            />\r\n            <Route\r\n              path=\"/st/vehicles/customer-vehicle\"\r\n              exact\r\n              component={CustomerVehicle}\r\n            />\r\n            <Route\r\n              path=\"/st/vehicles/mobile-service-vehicle\"\r\n              exact\r\n              component={MobileServiceVehicle}\r\n            />\r\n            <Route path=\"/st/vehicles/make\" exact component={Make} />\r\n            <Route path=\"/st/vehicles/model\" exact component={Model} />\r\n            <Route path=\"/st/vehicles/engine\" exact component={Engine} />\r\n\r\n            <Route path=\"/st/promotions\" component={Promotion} />\r\n            <Route path=\"/st/vehicle/services\" component={SrService} />\r\n\r\n            <Route path=\"/st/footer\" component={Footer} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\dashboard\\Dashboard.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\footer\\Footer.jsx",["233"],"import React from \"react\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\n\r\nfunction Footer() {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div>\r\n      <h1>{user ? user.username : \"\"}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\title\\Title.jsx",["234"],"import React from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../wrappers/Wrappers\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nfunction Title(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant={props.variant} size=\"sm\" className={classes.typo}>\r\n        {props.title}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\wrappers\\Wrappers.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\title\\styles.js",["235"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  pageTitleContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: theme.spacing(4),\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  typo: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n}));\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\popup\\Popup.jsx",["236","237"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nfunction Popup(props) {\r\n  const { title, actions, text, children, openPopup, setOpenPopup } = props;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    dialogWrapper: {\r\n      padding: theme.spacing(2),\r\n      position: \"absolute\",\r\n      top: theme.spacing(5),\r\n    },\r\n    dialogTitle: {\r\n      paddingRight: \"0px\",\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openPopup}\r\n        onClose={() => {\r\n          setOpenPopup(false);\r\n        }}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {text}\r\n          </DialogContentText>\r\n          {children}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\admin\\Admins.jsx",["238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport UserListTable from \"../UserListTable\";\r\n\r\nfunction Admins() {\r\n  const [type, setType] = useState(\"admin\");\r\n\r\n  return (\r\n    <div>\r\n      <UserListTable type={type}></UserListTable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admins;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\customer\\Customers.jsx",["240","241"],"import React, { useState, useEffect } from \"react\";\r\nimport UserListTable from \"../UserListTable\";\r\n\r\nfunction Customers() {\r\n  const [type, setType] = useState(\"customer\");\r\n\r\n  return (\r\n    <div>\r\n      <UserListTable type={type}></UserListTable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\mobilemechanic\\Mobilemechanics.jsx",["242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport UserListTable from \"../UserListTable\";\r\n\r\nfunction Mobilemechanics() {\r\n  const [type, setType] = useState(\"mobile-mechanic\");\r\n\r\n  return <UserListTable type={type}></UserListTable>;\r\n}\r\n\r\nexport default Mobilemechanics;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\supervisor\\Supervisors.jsx",["244","245"],"import React, { useState, useEffect } from \"react\";\r\nimport UserListTable from \"../UserListTable\";\r\n\r\nfunction Supervisors() {\r\n  const [type, setType] = useState(\"supervisor\");\r\n\r\n  return <UserListTable type={type}></UserListTable>;\r\n}\r\n\r\nexport default Supervisors;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\users\\UserListTable.jsx",["246"],"import React, { useState, useEffect } from \"react\";\r\nimport DisplayList from \"../../components/table/DisplayList\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport * as userService from \"../../services/userService\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  makeStyles,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport EditUser from \"../../components/form/EditUser\";\r\nimport AddUser from \"../../components/form/AddUser\";\r\nimport Delete from \"../../components/deleteItem/Delete\";\r\nimport Popup from \"../../components/popup/Popup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"username\", label: \"Username\" },\r\n  { id: \"firstname\", label: \"Firstname\" },\r\n  { id: \"lastname\", label: \"Lastname\" },\r\n  { id: \"email\", label: \"Email\" },\r\n  { id: \"phoneNumber\", label: \"Mobile\" },\r\n  { id: \"address\", label: \"Address\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nfunction UserListTable(props) {\r\n  const [{ token, api }] = useDataLayerValue();\r\n  const [users, setCustomers] = useState([]);\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [recordForDelete, setRecordForDelete] = useState(null);\r\n  const [openPopupEdit, setOpenPopupEdit] = useState(false);\r\n  const [openPopupDelete, setOpenPopupDelete] = useState(false);\r\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\r\n  const [timesReload, setTimesReload] = useState(0);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  let authAxios = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchusers();\r\n    } else console.log(\"no token\");\r\n  }, [timesReload]);\r\n\r\n  const fetchusers = async () => {\r\n    const _users = await userService.getUsers(authAxios, props.type);\r\n    setCustomers(_users);\r\n  };\r\n\r\n  const deleteUser = (user) => {\r\n    userService.deleteUser(authAxios, user.username).then(() => {\r\n      setOpenPopupDelete(false);\r\n      setTimesReload(timesReload + 1);\r\n    });\r\n  };\r\n\r\n  const addUser = (user) => {\r\n    userService.addUser(authAxios, user).then(() => {\r\n      setOpenPopupAdd(false);\r\n      setTimesReload(timesReload + 1);\r\n    });\r\n  };\r\n\r\n  const editUser = (user) => {\r\n    userService.editUser(authAxios, user).then(() => {\r\n      setOpenPopupEdit(false);\r\n      setTimesReload(timesReload + 1);\r\n    });\r\n  };\r\n\r\n  const addBtn = () => {\r\n    return (\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        className={classes.newButton}\r\n        onClick={() => {\r\n          setOpenPopupAdd(true);\r\n        }}\r\n      >\r\n        Add New Admin\r\n      </Button>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <DisplayList\r\n        headCells={headCells}\r\n        addBtn={props.type === \"admin\" ? addBtn() : \"\"}\r\n        title={props.type + \" list\"}\r\n        data={users}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      >\r\n        {(rowsPerPage > 0\r\n          ? users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          : users\r\n        ).map((user) => {\r\n          return (\r\n            <React.Fragment>\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.username}</TableCell>\r\n                <TableCell>{user.firstname}</TableCell>\r\n                <TableCell>{user.lastname}</TableCell>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell>{user.phoneNumber}</TableCell>\r\n                <TableCell>{user.address}</TableCell>\r\n\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      await setRecordForEdit(user);\r\n                      setOpenPopupEdit(true);\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={async () => {\r\n                      await setRecordForDelete(user);\r\n                      setOpenPopupDelete(true);\r\n                    }}\r\n                  >\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DisplayList>\r\n      <Popup\r\n        title={props.type}\r\n        openPopup={openPopupEdit}\r\n        setOpenPopup={setOpenPopupEdit}\r\n      >\r\n        <EditUser editUser={editUser} recordForEdit={recordForEdit} />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"Delete\"\r\n        openPopup={openPopupDelete}\r\n        setOpenPopup={setOpenPopupDelete}\r\n      >\r\n        <Delete\r\n          deleteRecord={deleteUser}\r\n          recordForDelete={recordForDelete}\r\n          setOpenPopupDelete={setOpenPopupDelete}\r\n          name={recordForDelete ? recordForDelete.username : \"\"}\r\n        />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"Register New Admin\"\r\n        openPopup={openPopupAdd}\r\n        setOpenPopup={setOpenPopupAdd}\r\n      >\r\n        <AddUser addNewUser={addUser} />\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListTable;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\table\\DisplayList.jsx",["247","248","249","250","251","252","253","254","255"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Title from \"../title/Title\";\r\nimport \"./DisplayList.css\";\r\n\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  useTheme,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Table,\r\n  TableHead,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Toolbar,\r\n  InputAdornment,\r\n  TextField,\r\n  TableFooter,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: theme.spacing(0),\r\n    padding: theme.spacing(0),\r\n  },\r\n  searchInput: {\r\n    width: \"75%\",\r\n  },\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n  table: {\r\n    marginTop: theme.spacing(0),\r\n    \"& thead th\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    \"& tbody td\": {},\r\n    \"& tbody tr:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction DisplayList(props) {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [records, setRecords] = useState(props.data);\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (users) => {\r\n      return users;\r\n    },\r\n  });\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const pages = [5, 10, 25];\r\n  const page = props.page;\r\n  const rowsPerPage = props.rowsPerPage;\r\n  const [order, setOrder] = useState();\r\n  const [orderBy, setOrderBy] = useState();\r\n\r\n  const handleSortRequest = (cellId) => {\r\n    const isAsc = orderBy === cellId && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(cellId);\r\n  };\r\n\r\n  const handleChangePage = props.handleChangePage;\r\n\r\n  const handleChangeRowsPerPage = props.handleChangeRowsPerPage;\r\n\r\n  const handleSearch = (e) => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n      fn: (users) => {\r\n        if (target.value == \"\") return users;\r\n        else\r\n          return users.filter((x) =>\r\n            x.fullName.toLowerCase().includes(target.value)\r\n          );\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"userlistComponent\">\r\n      <div className=\"title\">\r\n        <Title title={props.title} variant=\"h2\" />\r\n      </div>\r\n      <Paper className={classes.pageContent}>\r\n        <Toolbar>\r\n          <TextField\r\n            label=\"Search \"\r\n            className={classes.searchInput}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Search />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handleSearch}\r\n          />\r\n          {props.addBtn}\r\n        </Toolbar>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.headCells.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n                >\r\n                  {headCell.disableSorting ? (\r\n                    headCell.label\r\n                  ) : (\r\n                    <TableSortLabel\r\n                      active={orderBy === headCell.id}\r\n                      direction={orderBy === headCell.id ? order : \"asc\"}\r\n                      onClick={() => {\r\n                        handleSortRequest(headCell.id);\r\n                      }}\r\n                    >\r\n                      {headCell.label}\r\n                    </TableSortLabel>\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>{props.children}</TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          component=\"div\"\r\n          page={page}\r\n          rowsPerPageOptions={pages}\r\n          rowsPerPage={rowsPerPage}\r\n          count={props.data.length}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          ActionsComponent={TablePaginationActions}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayList;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\userService.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\customerVehicles\\CustomerVehicle.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\vehicleService.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleListTable.jsx",["256","257"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayList from \"../../components/table/DisplayList\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport * as vehicleService from \"../../services/vehicleService\";\r\n\r\nimport {\r\n  makeStyles,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction VehicleListTable(props) {\r\n  const { headCells, type, title } = props;\r\n\r\n  const [{ token, api }] = useDataLayerValue();\r\n\r\n  let authAxios = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchcustomersVehicles();\r\n    } else console.log(\"no token\");\r\n  }, []);\r\n\r\n  const [customersVehicles, setcustomersVehicles] = useState([]);\r\n\r\n  const fetchcustomersVehicles = async () => {\r\n    const _customersVehicles = await vehicleService.getVehicles(\r\n      authAxios,\r\n      type\r\n    );\r\n    setcustomersVehicles(_customersVehicles);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [recordForDelete, setRecordForDelete] = useState(null);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const openInPopup = () => {\r\n    console.log(\"Edittt\");\r\n\r\n    console.log(recordForEdit);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  const deletevehicle = () => {\r\n    console.log(\"Deletee\");\r\n\r\n    console.log(recordForDelete);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  const addBtn = () => {\r\n    return (\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        className={classes.newButton}\r\n        onClick={() => {\r\n          console.log(\"cusss\");\r\n          setOpenPopup(true);\r\n          setRecordForEdit(null);\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DisplayList\r\n        headCells={headCells}\r\n        addBtn={addBtn()}\r\n        title={title}\r\n        data={customersVehicles}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      >\r\n        {(rowsPerPage > 0\r\n          ? customersVehicles.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            )\r\n          : customersVehicles\r\n        ).map((vehicle) => {\r\n          if (type === \"customer-vehicle\") {\r\n            return (\r\n              <React.Fragment>\r\n                <TableRow key={vehicle.id}>\r\n                  <TableCell>{vehicle.customer.username}</TableCell>\r\n                  <TableCell>{vehicle.vehicleMake.make}</TableCell>\r\n                  <TableCell>{vehicle.vehicleModel.model}</TableCell>\r\n                  <TableCell>{vehicle.year}</TableCell>\r\n                  <TableCell>{vehicle.vehicleEngine.engine}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={async () => {\r\n                        await setRecordForEdit(vehicle);\r\n                        await openInPopup();\r\n                      }}\r\n                    >\r\n                      <EditOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={async () => {\r\n                        await setRecordForDelete(vehicle);\r\n                        await deletevehicle();\r\n                      }}\r\n                    >\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </React.Fragment>\r\n            );\r\n          }\r\n          return (\r\n            <React.Fragment>\r\n              <TableRow key={vehicle.id}>\r\n                <TableCell>\r\n                  {vehicle.mobileMechanic\r\n                    ? vehicle.mobileMechanic.username\r\n                    : \"not assign yet\"}\r\n                </TableCell>\r\n                <TableCell>{vehicle.vehicleMake.make}</TableCell>\r\n                <TableCell>{vehicle.vehicleModel.model}</TableCell>\r\n                <TableCell>{vehicle.year}</TableCell>\r\n                <TableCell>{vehicle.vehicleEngine.engine}</TableCell>\r\n                <TableCell>{vehicle.capacity}</TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      await setRecordForEdit(vehicle);\r\n                      await openInPopup();\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={async () => {\r\n                      await setRecordForDelete(vehicle);\r\n                      await deletevehicle();\r\n                    }}\r\n                  >\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DisplayList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VehicleListTable;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\mobileServiceVehicles\\MobileServiceVehicle.jsx",["258","259","260","261","262"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDataLayerValue } from \"../../../dataLayer/DataLayer\";\r\nimport * as vehicleService from \"../../../services/vehicleService\";\r\nimport VehicleListTable from \"../VehicleListTable\";\r\n\r\nconst headCells = [\r\n  { id: \"mobilemechanic\", label: \"Mechanic Username\" },\r\n  { id: \"make\", label: \"Make\" },\r\n  { id: \"model\", label: \"Model\" },\r\n  { id: \"year\", label: \"Year\" },\r\n  { id: \"engine\", label: \"Engine\" },\r\n  { id: \"capacity\", label: \"Capacity\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nfunction MobileServiceVehicle() {\r\n  const [type, setType] = useState(\"mobile-service-vehicle\");\r\n\r\n  return (\r\n    <div>\r\n      <VehicleListTable\r\n        headCells={headCells}\r\n        type={type}\r\n        title=\"Service Vehcicle List\"\r\n      ></VehicleListTable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileServiceVehicle;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Model.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Engine.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehicleData\\Make.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditUser.jsx",["263"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./EditUser.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction EditUser(props) {\r\n  const classes = useStyles();\r\n\r\n  const { editUser, recordForEdit } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    username: yup.string().required(\"Username is required\"),\r\n    firstname: yup.string().required(\"Firstname is required\"),\r\n    lastname: yup.string().required(\"Lastname is required\"),\r\n    email: yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    phoneNumber: yup\r\n      .string()\r\n      .min(10, \"Enter a valid phonenumber\")\r\n      .max(10, \"Enter a valid phonenumber\")\r\n      .required(\"Phonenumber is required\"),\r\n    address: yup.string().required(\"Address is required\"),\r\n  });\r\n\r\n  function onSubmit(user) {\r\n    updateUser(user);\r\n  }\r\n\r\n  const updateUser = async (userForEdit) => {\r\n    editUser(userForEdit);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    formik.handleReset();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: recordForEdit,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      onSubmit(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"editUserForm\">\r\n          <Grid>\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"firstname\"\r\n              name=\"firstname\"\r\n              label=\"Firstname\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.firstname}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.firstname && Boolean(formik.errors.firstname)\r\n              }\r\n              helperText={formik.errors.firstname}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              label=\"lastname\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.lastname}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.lastname && Boolean(formik.errors.lastname)}\r\n              helperText={formik.touched.lastname && formik.errors.lastname}\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              label=\"phoneNumber\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.phoneNumber}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.phoneNumber && Boolean(formik.errors.phoneNumber)\r\n              }\r\n              helperText={\r\n                formik.touched.phoneNumber && formik.errors.phoneNumber\r\n              }\r\n            />{\" \"}\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"address\"\r\n              name=\"address\"\r\n              label=\"address\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              className=\"input\"\r\n              value={formik.values.address}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.address && Boolean(formik.errors.address)}\r\n              helperText={formik.touched.address && formik.errors.address}\r\n            />\r\n          </Grid>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <div className={classes.root}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              value=\"Reset\"\r\n              color=\"secondary\"\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUser;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\deleteItem\\Delete.jsx",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\AddUser.jsx",["264","265"],"import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport \"./AddUser.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AddUser(props) {\r\n  const { addNewUser } = props;\r\n\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const validationSchema = yup.object({\r\n    username: yup\r\n      .string(\"Enter your username\")\r\n      .min(5, \"Username should be of minimum 5 characters length\")\r\n      .required(\"Username is required\"),\r\n    email: yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: yup\r\n      .string(\"Enter your password\")\r\n      .min(8, \"Password should be of minimum 8 characters length\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: (values) => {\r\n      user.username = values.username;\r\n      user.password = values.password;\r\n      user.email = values.email;\r\n      addUser(user);\r\n    },\r\n  });\r\n\r\n  const addUser = async (user) => {\r\n    addNewUser(user);\r\n    // console.log(user);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    formik.handleReset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={classes.root}>\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.username}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.username && Boolean(formik.errors.username)}\r\n            helperText={formik.touched.username && formik.errors.username}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />{\" \"}\r\n          <TextField\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.confirmPassword}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.confirmPassword &&\r\n              Boolean(formik.errors.confirmPassword)\r\n            }\r\n            helperText={\r\n              formik.touched.confirmPassword && formik.errors.confirmPassword\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"actions\">\r\n          <div className={classes.root}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              color=\"primary\"\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              value=\"Reset\"\r\n              color=\"secondary\"\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUser;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\header\\Header.jsx",["266","267","268","269","270","271","272","273","274"],"import React from \"react\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"default\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"gray\",\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const classes = useStyles();\r\n\r\n  const signOut = () => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      token: null,\r\n    });\r\n    localStorage.clear();\r\n  };\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function handleMenu(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar\r\n        style={{\r\n          backgroundColor: \"#03254c\",\r\n        }}\r\n        position=\"static\"\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Service Throttle Admin\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              onClick={handleMenu}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            {user ? user.username : \"\"}\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n              <MenuItem onClick={handleClose}>Settings</MenuItem>\r\n              <MenuItem onClick={signOut}>Sign Out</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\vehicles\\VehiclePartsList.jsx",["275","276"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayList from \"../../components/table/DisplayList\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport * as vehicleService from \"../../services/vehicleService\";\r\nimport Popup from \"../../components/popup/Popup\";\r\nimport EditVehicleParts from \"../../components/form/EditVehicleParts\";\r\nimport Delete from \"../../components/deleteItem/Delete\";\r\n\r\nimport {\r\n  makeStyles,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nfunction VehiclePartsList(props) {\r\n  const [{ token, api }] = useDataLayerValue();\r\n\r\n  const authAxios = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  const [vehicleParts, setVehicleParts] = useState([]);\r\n\r\n  const { headCells, partType } = props;\r\n  const classes = useStyles();\r\n  const type = useState(\"engine\");\r\n\r\n  const [recordForAdd, setRecordForAdd] = useState(null);\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [recordForDelete, setRecordForDelete] = useState(null);\r\n  const [openPopupEdit, setOpenPopupEdit] = useState(false);\r\n  const [openPopupDelete, setOpenPopupDelete] = useState(false);\r\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\r\n  const [timesReload, setTimesReload] = useState(0);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const fetchVehicleParts = async () => {\r\n    await vehicleService\r\n      .getVehicleParts(authAxios, partType)\r\n      .then((res) => {\r\n        setVehicleParts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchVehicleParts();\r\n    } else console.log(\"no token\");\r\n  }, [timesReload]);\r\n\r\n  const editVehiclePart = (vehiclePart) => {\r\n    vehicleService\r\n      .updateVehicleParts(authAxios, vehiclePart, partType)\r\n      .then(() => {\r\n        setOpenPopupEdit(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteVehiclePart = (vehiclePart) => {\r\n    vehicleService\r\n      .deleteVehicleParts(authAxios, vehiclePart, partType)\r\n      .then(() => {\r\n        setOpenPopupDelete(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addVehiclePart = (vehiclePart) => {\r\n    console.log(vehiclePart);\r\n    vehicleService\r\n      .addVehicleParts(authAxios, vehiclePart, partType)\r\n      .then(() => {\r\n        setOpenPopupAdd(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addBtn = () => {\r\n    return (\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        className={classes.newButton}\r\n        onClick={() => {\r\n          if (partType === \"engine\") {\r\n            setRecordForAdd({ engine: \"\" });\r\n          } else if (partType === \"make\") {\r\n            setRecordForAdd({ make: \"\" });\r\n          } else {\r\n            setRecordForAdd({ vehicleMake: \"\", model: \"\" });\r\n          }\r\n\r\n          setOpenPopupAdd(true);\r\n          setRecordForEdit(null);\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DisplayList\r\n        headCells={headCells}\r\n        addBtn={addBtn()}\r\n        title={partType + \" list\"}\r\n        data={vehicleParts}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      >\r\n        {(rowsPerPage > 0\r\n          ? vehicleParts.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            )\r\n          : vehicleParts\r\n        ).map((vehiclePart) => {\r\n          if (partType === \"engine\") {\r\n            return (\r\n              <React.Fragment>\r\n                <TableRow key={vehiclePart.id}>\r\n                  <TableCell>{vehiclePart.engine}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={async () => {\r\n                        await setRecordForEdit(vehiclePart);\r\n                        setOpenPopupEdit(true);\r\n                      }}\r\n                    >\r\n                      <EditOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={console.log(\"close\")}\r\n                    >\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </React.Fragment>\r\n            );\r\n          } else if (partType === \"make\") {\r\n            return (\r\n              <React.Fragment>\r\n                <TableRow key={vehiclePart.id}>\r\n                  <TableCell>{vehiclePart.make}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={async () => {\r\n                        await setRecordForEdit(vehiclePart);\r\n                        console.log(vehiclePart);\r\n                        setOpenPopupEdit(true);\r\n                      }}\r\n                    >\r\n                      <EditOutlinedIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={async () => {\r\n                        await setRecordForDelete(vehiclePart);\r\n                        setOpenPopupDelete(true);\r\n                      }}\r\n                    >\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </React.Fragment>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <React.Fragment>\r\n              <TableRow key={vehiclePart.id}>\r\n                <TableCell>{vehiclePart.vehicleMake.make}</TableCell>\r\n                <TableCell>{vehiclePart.model}</TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      await setRecordForEdit(vehiclePart);\r\n                      console.log(vehiclePart);\r\n                      setOpenPopupEdit(true);\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton color=\"secondary\" onClick={console.log()}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DisplayList>\r\n      <Popup\r\n        title={partType}\r\n        openPopup={openPopupEdit}\r\n        setOpenPopup={setOpenPopupEdit}\r\n      >\r\n        <EditVehicleParts\r\n          editVehiclePart={editVehiclePart}\r\n          recordForEdit={recordForEdit}\r\n          partType={partType}\r\n        />\r\n      </Popup>\r\n      <Popup\r\n        title=\"Delete\"\r\n        openPopup={openPopupDelete}\r\n        setOpenPopup={setOpenPopupDelete}\r\n      >\r\n        <Delete\r\n          deleteRecord={deleteVehiclePart}\r\n          recordForDelete={recordForDelete}\r\n          setOpenPopupDelete={setOpenPopupDelete}\r\n          name={partType}\r\n        />\r\n      </Popup>\r\n      <Popup\r\n        title={partType}\r\n        openPopup={openPopupAdd}\r\n        setOpenPopup={setOpenPopupAdd}\r\n      >\r\n        <EditVehicleParts\r\n          editVehiclePart={addVehiclePart}\r\n          recordForEdit={recordForAdd}\r\n          partType={partType}\r\n        />\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VehiclePartsList;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditVehicleParts.jsx",["277","278","279"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  TextField,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\n\r\nimport \"./EditUser.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    minWidth: 250,\r\n    height: 40,\r\n  },\r\n\r\n  inputLable: {\r\n    paddingLeft: 15,\r\n  },\r\n}));\r\n\r\nfunction EditVehicleParts(props) {\r\n  const [{ makes }] = useDataLayerValue();\r\n\r\n  const { editVehiclePart, recordForEdit, partType } = props;\r\n  const classes = useStyles();\r\n  let validationSchema;\r\n\r\n  if (partType === \"engine\") {\r\n    validationSchema = yup.object({\r\n      engine: yup.string().required(\"Engine is required\"),\r\n    });\r\n  } else if (partType === \"make\") {\r\n    validationSchema = yup.object({\r\n      make: yup.string().required(\"Make is required\"),\r\n    });\r\n  } else {\r\n    validationSchema = yup.object({\r\n      model: yup.string().required(\"Model is required\"),\r\n    });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: recordForEdit,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      editVehiclePart(values);\r\n    },\r\n  });\r\n\r\n  const resetForm = () => {\r\n    formik.handleReset();\r\n  };\r\n\r\n  if (partType === \"engine\") {\r\n    return (\r\n      <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"engine\"\r\n            name=\"engine\"\r\n            label=\"Engine\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.engine}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.engine && Boolean(formik.errors.engine)}\r\n            helperText={formik.touched.engine && formik.errors.engine}\r\n          />\r\n          <div className={classes.root}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              value=\"Reset\"\r\n              color=\"secondary\"\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (partType === \"make\") {\r\n    return (\r\n      <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"make\"\r\n            name=\"make\"\r\n            label=\"Make\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.make}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.make && Boolean(formik.errors.make)}\r\n            helperText={formik.touched.make && formik.errors.make}\r\n          />\r\n          <div className={classes.root}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              value=\"Reset\"\r\n              color=\"secondary\"\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {formik.values.vehicleMake ? (\r\n          <h7>{formik.values.vehicleMake.make}</h7>\r\n        ) : (\r\n          <FormControl>\r\n            <InputLabel\r\n              id=\"demo-simple-select-filled-label\"\r\n              className={classes.inputLable}\r\n            ></InputLabel>\r\n\r\n            <Select\r\n              labelId=\"vehicleMake\"\r\n              id=\"vehicleMake\"\r\n              className={classes.formControl}\r\n              variant=\"outlined\"\r\n              value={formik.values.vehicleMake}\r\n              onChange={formik.handleChange}\r\n              label=\"VehicleMake\"\r\n              name=\"vehicleMake\"\r\n            >\r\n              {makes.map((make) => {\r\n                return (\r\n                  <MenuItem value={make}>\r\n                    <em>{make.make}</em>\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        <br></br>\r\n        <TextField\r\n          type=\"text\"\r\n          id=\"model\"\r\n          name=\"model\"\r\n          label=\"Model\"\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          className=\"input\"\r\n          value={formik.values.model}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.model && Boolean(formik.errors.model)}\r\n          helperText={formik.touched.model && formik.errors.model}\r\n        />\r\n        <div className={classes.root}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            value=\"Reset\"\r\n            color=\"secondary\"\r\n            onClick={resetForm}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditVehicleParts;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditVehicle.jsx",["280","281","282","283","284","285","286","287"],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\promotions\\Promotion.jsx",["288"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayList from \"../../components/table/DisplayList\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport * as promoService from \"../../services/promotionService\";\r\nimport Popup from \"../../components/popup/Popup\";\r\nimport Delete from \"../../components/deleteItem/Delete\";\r\n\r\nimport {\r\n  makeStyles,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport EditAddPromotion from \"../../components/form/EditAddPromotion\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"promoCode\", label: \"Promo Code\" },\r\n  { id: \"discount\", label: \"Discount\" },\r\n  { id: \"promoDescription\", label: \"Description\" },\r\n  { id: \"imageUri\", label: \"Image\" },\r\n  { id: \"createdAt\", label: \"Start\" },\r\n  { id: \"endAt\", label: \"End\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nfunction Promotion() {\r\n  const [{ token, api }] = useDataLayerValue();\r\n  const classes = useStyles();\r\n  const [promotions, setPromotions] = useState([]);\r\n  const [recordForAdd, setRecordForAdd] = useState(null);\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [recordForDelete, setRecordForDelete] = useState(null);\r\n  const [openPopupEdit, setOpenPopupEdit] = useState(false);\r\n  const [openPopupDelete, setOpenPopupDelete] = useState(false);\r\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\r\n  const [timesReload, setTimesReload] = useState(0);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const authAxios = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  const fetchPromotion = async () => {\r\n    await promoService\r\n      .getPromotion(authAxios)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPromotions(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchPromotion();\r\n    } else console.log(\"no token\");\r\n  }, [timesReload]);\r\n\r\n  const _addPromotion = (promotion) => {\r\n    promoService\r\n      .addPromotions(authAxios, promotion)\r\n      .then(() => {\r\n        setOpenPopupAdd(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const editPromotion = (promotion) => {\r\n    promoService\r\n      .updatePromotions(authAxios, promotion)\r\n      .then(() => {\r\n        setOpenPopupEdit(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePromotion = (promotion) => {\r\n    promoService\r\n      .deletePromotions(authAxios, promotion)\r\n      .then(() => {\r\n        setOpenPopupDelete(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addBtn = () => {\r\n    return (\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        className={classes.newButton}\r\n        onClick={() => {\r\n          setRecordForAdd({\r\n            promoCode: \"\",\r\n            discount: \"\",\r\n            promoDescription: \"\",\r\n            imageUri: \"\",\r\n          });\r\n          setOpenPopupAdd(true);\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DisplayList\r\n        headCells={headCells}\r\n        addBtn={addBtn()}\r\n        title={\"Promotions\"}\r\n        data={promotions}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      >\r\n        {(rowsPerPage > 0\r\n          ? promotions.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            )\r\n          : promotions\r\n        ).map((promo) => {\r\n          return (\r\n            <React.Fragment>\r\n              <TableRow key={promo.id}>\r\n                <TableCell>{promo.promoCode}</TableCell>\r\n                <TableCell>{promo.discount}</TableCell>\r\n                <TableCell>{promo.promoDescription}</TableCell>\r\n                <TableCell>{promo.imageUri}</TableCell>\r\n                <TableCell>{promo.createdAt}</TableCell>\r\n                <TableCell>{promo.endAt}</TableCell>\r\n\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      await setRecordForEdit(promo);\r\n                      setOpenPopupEdit(true);\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={async () => {\r\n                      await setRecordForDelete(promo);\r\n                      setOpenPopupDelete(true);\r\n                    }}\r\n                  >\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DisplayList>\r\n\r\n      <Popup\r\n        title=\"Promotions\"\r\n        openPopup={openPopupAdd}\r\n        setOpenPopup={setOpenPopupAdd}\r\n      >\r\n        <EditAddPromotion\r\n          editPromotion={_addPromotion}\r\n          recordForEdit={recordForAdd}\r\n        />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"Promotions\"\r\n        openPopup={openPopupEdit}\r\n        setOpenPopup={setOpenPopupEdit}\r\n      >\r\n        <EditAddPromotion\r\n          editPromotion={editPromotion}\r\n          recordForEdit={recordForEdit}\r\n        />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"Delete\"\r\n        openPopup={openPopupDelete}\r\n        setOpenPopup={setOpenPopupDelete}\r\n      >\r\n        <Delete\r\n          deleteRecord={deletePromotion}\r\n          recordForDelete={recordForDelete}\r\n          setOpenPopupDelete={setOpenPopupDelete}\r\n          name={recordForDelete ? recordForDelete.promoCode : \"Promotion\"}\r\n        />\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Promotion;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\promotionService.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditAddPromotion.jsx",["289","290"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction EditAddPromotion(props) {\r\n  const { editPromotion, recordForEdit } = props;\r\n  const classes = useStyles();\r\n\r\n  const validationSchema = yup.object({\r\n    promoCode: yup.string(\"Enter new code\").required(\"PromoCode is required\"),\r\n    discount: yup\r\n      .number()\r\n      .max(100, \"Maximum Exeeded\")\r\n      .min(10, \"Add value greater than 10\")\r\n      .required(\"PromoDiscount is required\"),\r\n    promoDescription: yup\r\n      .string(\"Enter new desctiption\")\r\n      .required(\"Promo description is required\"),\r\n    imageUri: yup.string(\"Enter new imageuri\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: recordForEdit,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      editPromotion(values);\r\n    },\r\n  });\r\n\r\n  const resetForm = () => {\r\n    formik.handleReset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={classes.root}>\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"promoCode\"\r\n            name=\"promoCode\"\r\n            label=\"PromoCode\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.promoCode}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.promoCode && Boolean(formik.errors.promoCode)}\r\n            helperText={formik.touched.promoCode && formik.errors.promoCode}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"discount\"\r\n            name=\"discount\"\r\n            label=\"Discount\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.discount}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.discount && Boolean(formik.errors.discount)}\r\n            helperText={formik.touched.discount && formik.errors.discount}\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"promoDescription\"\r\n            name=\"promoDescription\"\r\n            label=\"Dicription\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.promoDescription}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.promoDescription &&\r\n              Boolean(formik.errors.promoDescription)\r\n            }\r\n            helperText={\r\n              formik.touched.promoDescription && formik.errors.promoDescription\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"imageUri\"\r\n            name=\"imageUri\"\r\n            label=\"Image\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.imageUri}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.imageUri && Boolean(formik.errors.imageUri)}\r\n            helperText={formik.touched.imageUri && formik.errors.imageUri}\r\n          />\r\n        </div>\r\n        <div className={classes.root}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            value=\"Reset\"\r\n            color=\"secondary\"\r\n            onClick={resetForm}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditAddPromotion;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\pages\\srservices\\SrService.jsx",["291"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DisplayList from \"../../components/table/DisplayList\";\r\nimport { useDataLayerValue } from \"../../dataLayer/DataLayer\";\r\nimport Popup from \"../../components/popup/Popup\";\r\nimport Delete from \"../../components/deleteItem/Delete\";\r\nimport * as srservice from \"../../services/srserviceservice\";\r\nimport EditAddSrService from \"../../components/form/EditAddSrService\";\r\n\r\nimport {\r\n  makeStyles,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"vehicleServiceName\", label: \"Name\" },\r\n  { id: \"vehicleServicePrice\", label: \"Price\" },\r\n  { id: \"vehicleServiceDescription\", label: \"Description\" },\r\n  { id: \"vehicleServiceType\", label: \"Type\" },\r\n  { id: \"imageURL\", label: \"Image\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nfunction SrService() {\r\n  const [{ token, api }] = useDataLayerValue();\r\n  const classes = useStyles();\r\n  const [SrServices, setSrServices] = useState([]);\r\n  const [recordForAdd, setRecordForAdd] = useState(null);\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [recordForDelete, setRecordForDelete] = useState(null);\r\n  const [openPopupEdit, setOpenPopupEdit] = useState(false);\r\n  const [openPopupDelete, setOpenPopupDelete] = useState(false);\r\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\r\n  const [timesReload, setTimesReload] = useState(0);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const authAxios = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  const fetchSrService = async () => {\r\n    await srservice\r\n      .getservice(authAxios)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setSrServices(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchSrService();\r\n    } else console.log(\"no token\");\r\n  }, [timesReload]);\r\n\r\n  const _addSrService = (SrService) => {\r\n    srservice\r\n      .addservices(authAxios, SrService)\r\n      .then(() => {\r\n        setOpenPopupAdd(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const editSrService = (SrService) => {\r\n    srservice\r\n      .updateservices(authAxios, SrService)\r\n      .then(() => {\r\n        setOpenPopupEdit(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteSrService = (SrService) => {\r\n    srservice\r\n      .deleteservices(authAxios, SrService)\r\n      .then(() => {\r\n        setOpenPopupDelete(false);\r\n        setTimesReload(timesReload + 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const addBtn = () => {\r\n    return (\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<AddIcon />}\r\n        className={classes.newButton}\r\n        onClick={() => {\r\n          setRecordForAdd({\r\n            vehicleServiceName: \"\",\r\n            vehicleServicePrice: \"\",\r\n            vehicleServiceDescription: \"\",\r\n            vehicleServiceType: \"\",\r\n          });\r\n          setOpenPopupAdd(true);\r\n        }}\r\n      >\r\n        Add New\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DisplayList\r\n        headCells={headCells}\r\n        addBtn={addBtn()}\r\n        title={\"SR Services\"}\r\n        data={SrServices}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      >\r\n        {(rowsPerPage > 0\r\n          ? SrServices.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            )\r\n          : SrServices\r\n        ).map((service) => {\r\n          return (\r\n            <React.Fragment>\r\n              <TableRow key={service.id}>\r\n                <TableCell>{service.vehicleServiceName}</TableCell>\r\n                <TableCell>{service.vehicleServicePrice}</TableCell>\r\n                <TableCell>{service.vehicleServiceDescription}</TableCell>\r\n                <TableCell>{service.vehicleServiceType}</TableCell>\r\n                <TableCell>{service.imageURL}</TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                      await setRecordForEdit(service);\r\n                      setOpenPopupEdit(true);\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={async () => {\r\n                      await setRecordForDelete(service);\r\n                      setOpenPopupDelete(true);\r\n                    }}\r\n                  >\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </DisplayList>\r\n\r\n      <Popup\r\n        title=\"SR Services\"\r\n        openPopup={openPopupAdd}\r\n        setOpenPopup={setOpenPopupAdd}\r\n      >\r\n        <EditAddSrService\r\n          editSrService={_addSrService}\r\n          recordForEdit={recordForAdd}\r\n        />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"SR Services\"\r\n        openPopup={openPopupEdit}\r\n        setOpenPopup={setOpenPopupEdit}\r\n      >\r\n        <EditAddSrService\r\n          editSrService={editSrService}\r\n          recordForEdit={recordForEdit}\r\n        />\r\n      </Popup>\r\n\r\n      <Popup\r\n        title=\"Delete\"\r\n        openPopup={openPopupDelete}\r\n        setOpenPopup={setOpenPopupDelete}\r\n      >\r\n        <Delete\r\n          deleteRecord={deleteSrService}\r\n          recordForDelete={recordForDelete}\r\n          setOpenPopupDelete={setOpenPopupDelete}\r\n          name={\r\n            recordForDelete ? recordForDelete.vehicleServiceName : \"SrService\"\r\n          }\r\n        />\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SrService;\r\n","C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\services\\srserviceservice.js",[],"C:\\CS300\\304_Individual_Project\\Service-Throttle-Web\\Service-Throttle-Frontend\\service-throttle-admin-dashboard\\src\\components\\form\\EditAddSrService.jsx",["292"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction EditAddSrService(props) {\r\n  const { editSrService, recordForEdit } = props;\r\n  const classes = useStyles();\r\n\r\n  const validationSchema = yup.object({\r\n    vehicleServiceName: yup\r\n      .string(\"Enter new name\")\r\n      .required(\"vehicle Service Name is required\"),\r\n    vehicleServicePrice: yup\r\n      .number()\r\n      .min(10, \"Add value greater than 10\")\r\n      .required(\"Price is required\"),\r\n    vehicleServiceDescription: yup\r\n      .string(\"Enter new Desctiption\")\r\n      .required(\"Description is required\"),\r\n    vehicleServiceType: yup\r\n      .string(\"Enter new Vehicle Service Type\")\r\n      .required(\"Type is required\"),\r\n    imageURL: yup.string(\"Enter new Image url\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: recordForEdit,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      editSrService(values);\r\n    },\r\n  });\r\n\r\n  const resetForm = () => {\r\n    formik.handleReset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={classes.root}>\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"vehicleServiceName\"\r\n            name=\"vehicleServiceName\"\r\n            label=\"Vehicle Service Name\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.vehicleServiceName}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.vehicleServiceName &&\r\n              Boolean(formik.errors.vehicleServiceName)\r\n            }\r\n            helperText={\r\n              formik.touched.vehicleServiceName &&\r\n              formik.errors.vehicleServiceName\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"vehicleServicePrice\"\r\n            name=\"vehicleServicePrice\"\r\n            label=\"Vehicle Service Price\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.vehicleServicePrice}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.vehicleServicePrice &&\r\n              Boolean(formik.errors.vehicleServicePrice)\r\n            }\r\n            helperText={\r\n              formik.touched.vehicleServicePrice &&\r\n              formik.errors.vehicleServicePrice\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"vehicleServiceDescription\"\r\n            name=\"vehicleServiceDescription\"\r\n            label=\"Dicription\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.vehicleServiceDescription}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.vehicleServiceDescription &&\r\n              Boolean(formik.errors.vehicleServiceDescription)\r\n            }\r\n            helperText={\r\n              formik.touched.vehicleServiceDescription &&\r\n              formik.errors.vehicleServiceDescription\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"vehicleServiceType\"\r\n            name=\"vehicleServiceType\"\r\n            label=\"Type\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.vehicleServiceType}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.vehicleServiceType &&\r\n              Boolean(formik.errors.vehicleServiceType)\r\n            }\r\n            helperText={\r\n              formik.touched.vehicleServiceType &&\r\n              formik.errors.vehicleServiceType\r\n            }\r\n          />\r\n          <TextField\r\n            type=\"text\"\r\n            id=\"imageURL\"\r\n            name=\"imageURL\"\r\n            label=\"Image\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            className=\"input\"\r\n            value={formik.values.imageURL}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.imageURL && Boolean(formik.errors.imageURL)}\r\n            helperText={formik.touched.imageURL && formik.errors.imageURL}\r\n          />\r\n        </div>\r\n        <div className={classes.root}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            color=\"primary\"\r\n          >\r\n            Submit\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            value=\"Reset\"\r\n            color=\"secondary\"\r\n            onClick={resetForm}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditAddSrService;\r\n",{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":11,"column":21,"nodeType":"299","messageId":"300","endLine":11,"endColumn":32},{"ruleId":"301","severity":1,"message":"302","line":20,"column":6,"nodeType":"303","endLine":20,"endColumn":8,"suggestions":"304"},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"306","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":14},{"ruleId":"297","severity":1,"message":"307","line":9,"column":10,"nodeType":"299","messageId":"300","endLine":9,"endColumn":18},{"ruleId":"297","severity":1,"message":"308","line":2,"column":10,"nodeType":"299","messageId":"300","endLine":2,"endColumn":27},{"ruleId":"297","severity":1,"message":"309","line":55,"column":5,"nodeType":"299","messageId":"300","endLine":55,"endColumn":14},{"ruleId":"293","replacedBy":"310"},{"ruleId":"295","replacedBy":"311"},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"312","line":7,"column":18,"nodeType":"299","messageId":"300","endLine":7,"endColumn":22},{"ruleId":"297","severity":1,"message":"313","line":17,"column":8,"nodeType":"299","messageId":"300","endLine":17,"endColumn":21},{"ruleId":"297","severity":1,"message":"314","line":19,"column":8,"nodeType":"299","messageId":"300","endLine":19,"endColumn":22},{"ruleId":"297","severity":1,"message":"315","line":20,"column":8,"nodeType":"299","messageId":"300","endLine":20,"endColumn":31},{"ruleId":"297","severity":1,"message":"316","line":99,"column":9,"nodeType":"299","messageId":"300","endLine":99,"endColumn":14},{"ruleId":"297","severity":1,"message":"317","line":102,"column":21,"nodeType":"299","messageId":"300","endLine":102,"endColumn":33},{"ruleId":"297","severity":1,"message":"318","line":1,"column":22,"nodeType":"299","messageId":"300","endLine":1,"endColumn":30},{"ruleId":"319","severity":1,"message":"320","line":21,"column":3,"nodeType":"321","messageId":"322","endLine":21,"endColumn":9},{"ruleId":"297","severity":1,"message":"323","line":9,"column":8,"nodeType":"299","messageId":"300","endLine":9,"endColumn":14},{"ruleId":"301","severity":1,"message":"324","line":61,"column":6,"nodeType":"303","endLine":61,"endColumn":8,"suggestions":"325"},{"ruleId":"297","severity":1,"message":"326","line":5,"column":20,"nodeType":"299","messageId":"300","endLine":5,"endColumn":28},{"ruleId":"297","severity":1,"message":"316","line":8,"column":9,"nodeType":"299","messageId":"300","endLine":8,"endColumn":14},{"ruleId":"297","severity":1,"message":"318","line":1,"column":22,"nodeType":"299","messageId":"300","endLine":1,"endColumn":30},{"ruleId":"297","severity":1,"message":"327","line":9,"column":18,"nodeType":"299","messageId":"300","endLine":9,"endColumn":25},{"ruleId":"297","severity":1,"message":"328","line":11,"column":9,"nodeType":"299","messageId":"300","endLine":11,"endColumn":18},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"329","line":5,"column":16,"nodeType":"299","messageId":"300","endLine":5,"endColumn":23},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"329","line":5,"column":16,"nodeType":"299","messageId":"300","endLine":5,"endColumn":23},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"329","line":5,"column":16,"nodeType":"299","messageId":"300","endLine":5,"endColumn":23},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"329","line":5,"column":16,"nodeType":"299","messageId":"300","endLine":5,"endColumn":23},{"ruleId":"301","severity":1,"message":"330","line":75,"column":6,"nodeType":"303","endLine":75,"endColumn":19,"suggestions":"331"},{"ruleId":"297","severity":1,"message":"332","line":20,"column":3,"nodeType":"299","messageId":"300","endLine":20,"endColumn":14},{"ruleId":"297","severity":1,"message":"333","line":132,"column":10,"nodeType":"299","messageId":"300","endLine":132,"endColumn":23},{"ruleId":"297","severity":1,"message":"334","line":132,"column":25,"nodeType":"299","messageId":"300","endLine":132,"endColumn":41},{"ruleId":"297","severity":1,"message":"335","line":133,"column":10,"nodeType":"299","messageId":"300","endLine":133,"endColumn":17},{"ruleId":"297","severity":1,"message":"336","line":133,"column":19,"nodeType":"299","messageId":"300","endLine":133,"endColumn":29},{"ruleId":"297","severity":1,"message":"337","line":134,"column":10,"nodeType":"299","messageId":"300","endLine":134,"endColumn":18},{"ruleId":"297","severity":1,"message":"338","line":139,"column":10,"nodeType":"299","messageId":"300","endLine":139,"endColumn":19},{"ruleId":"297","severity":1,"message":"339","line":139,"column":21,"nodeType":"299","messageId":"300","endLine":139,"endColumn":33},{"ruleId":"340","severity":1,"message":"341","line":161,"column":26,"nodeType":"342","messageId":"322","endLine":161,"endColumn":28},{"ruleId":"301","severity":1,"message":"343","line":42,"column":6,"nodeType":"303","endLine":42,"endColumn":8,"suggestions":"344"},{"ruleId":"297","severity":1,"message":"338","line":57,"column":10,"nodeType":"299","messageId":"300","endLine":57,"endColumn":19},{"ruleId":"297","severity":1,"message":"305","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"345","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"308","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":27},{"ruleId":"297","severity":1,"message":"346","line":4,"column":13,"nodeType":"299","messageId":"300","endLine":4,"endColumn":27},{"ruleId":"297","severity":1,"message":"329","line":18,"column":16,"nodeType":"299","messageId":"300","endLine":18,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":161,"column":15,"nodeType":"349","endLine":161,"endColumn":32},{"ruleId":"297","severity":1,"message":"350","line":20,"column":16,"nodeType":"299","messageId":"300","endLine":20,"endColumn":23},{"ruleId":"347","severity":1,"message":"348","line":145,"column":15,"nodeType":"349","endLine":145,"endColumn":32},{"ruleId":"297","severity":1,"message":"351","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"297","severity":1,"message":"352","line":8,"column":8,"nodeType":"299","messageId":"300","endLine":8,"endColumn":17},{"ruleId":"297","severity":1,"message":"353","line":9,"column":8,"nodeType":"299","messageId":"300","endLine":9,"endColumn":13},{"ruleId":"297","severity":1,"message":"354","line":12,"column":8,"nodeType":"299","messageId":"300","endLine":12,"endColumn":16},{"ruleId":"297","severity":1,"message":"355","line":13,"column":8,"nodeType":"299","messageId":"300","endLine":13,"endColumn":18},{"ruleId":"297","severity":1,"message":"356","line":15,"column":8,"nodeType":"299","messageId":"300","endLine":15,"endColumn":16},{"ruleId":"297","severity":1,"message":"357","line":16,"column":8,"nodeType":"299","messageId":"300","endLine":16,"endColumn":25},{"ruleId":"297","severity":1,"message":"358","line":17,"column":8,"nodeType":"299","messageId":"300","endLine":17,"endColumn":16},{"ruleId":"297","severity":1,"message":"359","line":18,"column":10,"nodeType":"299","messageId":"300","endLine":18,"endColumn":14},{"ruleId":"297","severity":1,"message":"360","line":43,"column":9,"nodeType":"299","messageId":"300","endLine":43,"endColumn":13},{"ruleId":"301","severity":1,"message":"361","line":80,"column":6,"nodeType":"303","endLine":80,"endColumn":19,"suggestions":"362"},{"ruleId":"347","severity":1,"message":"348","line":100,"column":15,"nodeType":"349","endLine":100,"endColumn":32},{"ruleId":"347","severity":1,"message":"348","line":141,"column":15,"nodeType":"349","endLine":141,"endColumn":32},{"ruleId":"347","severity":1,"message":"348","line":211,"column":13,"nodeType":"349","endLine":211,"endColumn":30},{"ruleId":"297","severity":1,"message":"363","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":16},{"ruleId":"297","severity":1,"message":"364","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":28},{"ruleId":"297","severity":1,"message":"365","line":6,"column":30,"nodeType":"299","messageId":"300","endLine":6,"endColumn":38},{"ruleId":"297","severity":1,"message":"366","line":6,"column":40,"nodeType":"299","messageId":"300","endLine":6,"endColumn":51},{"ruleId":"297","severity":1,"message":"367","line":21,"column":12,"nodeType":"299","messageId":"300","endLine":21,"endColumn":17},{"ruleId":"297","severity":1,"message":"368","line":27,"column":9,"nodeType":"299","messageId":"300","endLine":27,"endColumn":14},{"ruleId":"319","severity":1,"message":"369","line":33,"column":5,"nodeType":"321","messageId":"322","endLine":33,"endColumn":17},{"ruleId":"347","severity":1,"message":"348","line":110,"column":15,"nodeType":"349","endLine":110,"endColumn":32},{"ruleId":"301","severity":1,"message":"370","line":85,"column":6,"nodeType":"303","endLine":85,"endColumn":19,"suggestions":"371"},{"ruleId":"297","severity":1,"message":"372","line":5,"column":29,"nodeType":"299","messageId":"300","endLine":5,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":121,"column":13,"nodeType":"349","endLine":121,"endColumn":30},{"ruleId":"301","severity":1,"message":"373","line":84,"column":6,"nodeType":"303","endLine":84,"endColumn":19,"suggestions":"374"},{"ruleId":"347","severity":1,"message":"348","line":157,"column":13,"nodeType":"349","endLine":157,"endColumn":30},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"no-unused-vars","'setIsLogged' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken', 'dispatch', and 'notLogged'. Either include them or remove the dependency array.","ArrayExpression",["377"],"'useEffect' is defined but never used.","'Layout' is defined but never used.","'Redirect' is defined but never used.","'useDataLayerValue' is defined but never used.","'authAxios' is assigned a value but never used.",["375"],["376"],"'Icon' is defined but never used.","'PersonPinIcon' is defined but never used.","'LocalOfferIcon' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","'theme' is assigned a value but never used.","'setPermanent' is assigned a value but never used.","'useTheme' is defined but never used.","no-dupe-keys","Duplicate key 'drawer'.","ObjectExpression","unexpected","'NavBar' is defined but never used.","React Hook useEffect has missing dependencies: 'api' and 'dispatch'. Either include them or remove the dependency array.",["378"],"'dispatch' is assigned a value but never used.","'actions' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'setType' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchusers' and 'token'. Either include them or remove the dependency array.",["379"],"'TableFooter' is defined but never used.","'recordForEdit' is assigned a value but never used.","'setRecordForEdit' is assigned a value but never used.","'records' is assigned a value but never used.","'setRecords' is assigned a value but never used.","'filterFn' is assigned a value but never used.","'openPopup' is assigned a value but never used.","'setOpenPopup' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'fetchcustomersVehicles' and 'token'. Either include them or remove the dependency array.",["380"],"'axios' is defined but never used.","'vehicleService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setUser' is assigned a value but never used.","'fade' is defined but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'blue' is defined but never used.","'type' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchVehicleParts' and 'token'. Either include them or remove the dependency array.",["381"],"'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'makes' is assigned a value but never used.","'isAdd' is assigned a value but never used.","Duplicate key 'vehicleModel'.","React Hook useEffect has missing dependencies: 'fetchPromotion' and 'token'. Either include them or remove the dependency array.",["382"],"'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchSrService' and 'token'. Either include them or remove the dependency array.",["383"],"no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [authToken, dispatch, notLogged]",{"range":"398","text":"399"},"Update the dependencies array to be: [api, dispatch]",{"range":"400","text":"401"},"Update the dependencies array to be: [fetchusers, timesReload, token]",{"range":"402","text":"403"},"Update the dependencies array to be: [fetchcustomersVehicles, token]",{"range":"404","text":"405"},"Update the dependencies array to be: [fetchVehicleParts, timesReload, token]",{"range":"406","text":"407"},"Update the dependencies array to be: [fetchPromotion, timesReload, token]",{"range":"408","text":"409"},"Update the dependencies array to be: [fetchSrService, timesReload, token]",{"range":"410","text":"411"},[564,566],"[authToken, dispatch, notLogged]",[2079,2081],"[api, dispatch]",[2299,2312],"[fetchusers, timesReload, token]",[1046,1048],"[fetchcustomersVehicles, token]",[2344,2357],"[fetchVehicleParts, timesReload, token]",[2588,2601],"[fetchPromotion, timesReload, token]",[2574,2587],"[fetchSrService, timesReload, token]"]